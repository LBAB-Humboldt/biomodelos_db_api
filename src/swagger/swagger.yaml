swagger: "2.0"
info:
  version: "0.2"
  title: Biomodels API Services
# during dev, should point to your local machine
host: localhost:4000
# basePath prefixes all resource paths
basePath: /biomodelos
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /species/records/{taxID}:
    # binds a127 app logic to a route
    x-swagger-router-controller: biomodels
    get:
      description: "All the records of an acceptedNameUsage (using internal taxID as key): query (use = true & visualizationPrivileges = 0)"
      operationId: speciesRecords
      parameters:
        - name: taxID
          in: path
          description: The taxon ID of the specie
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
            required:
              - type
              - features
            properties:
              type:
                type: string
                default: "FeatureCollection"
              features:
                type: array
                items:
                  $ref: "#/definitions/FeatureSpecieRecord"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /species:
    # binds a127 app logic to a route
    x-swagger-router-controller: biomodels
    get:
      description: "TO DO"
      operationId: species
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                taxID:
                  type: integer
                species:
                  type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /species/{taxID}:
    # binds a127 app logic to a route
    x-swagger-router-controller: biomodels
    get:
      description: "TO DO"
      operationId: speciesByTaxID
      parameters:
        - name: taxID
          in: path
          description: The taxon ID of the specie
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                totalRecords:
                  type: integer
                acceptedNameUsage:
                  type: string
                kingdom:
                  type: string
                phylum:
                  type: string
                class:
                  type: string
                order:
                  type: string
                family:
                  type: string
                species:
                  type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  FeatureSpecieRecord:
    type: object
    description: GeoJSON feoture for specie record
    required:
      - type
      - geometry
      - properties
    properties:
      type:
        type: string
        default: "feature"
      geometry:
        $ref: "#/definitions/Point"
      properties:
        $ref: "#/definitions/SpecieRecordProperties"
  Geometry:
    type: object
    description: GeoJSon geometry
    discriminator: type
    required:
      - type
    externalDocs:
      url: http://geojson.org/geojson-spec.html#geometry-objects
    properties:
      type:
        type: string
        enum:
        - Point
        - LineString
        - Polygon
        - MultiPoint
        - MultiLineString
        - MultiPolygon
        description: the geometry type
  Point2D:
    type: array
    maxItems: 2
    minItems: 2
    items:
      type: number
  Point:
    type: object
    description: GeoJSon geometry
    externalDocs:
      url: http://geojson.org/geojson-spec.html#id2
    allOf:
      - $ref: "#/definitions/Geometry"
      - properties:
          coordinates:
            $ref: '#/definitions/Point2D'
  # LineString:
  #   type: object
  #   description: GeoJSon geometry
  #   externalDocs:
  #     url: http://geojson.org/geojson-spec.html#id3
  #   allOf:
  #     - $ref: "#/definitions/Geometry"
  #     - properties:
  #         coordinates:
  #           type: array
  #           items:
  #             $ref: '#/definitions/Point2D'
  # Polygon:
  #   type: object
  #   description: GeoJSon geometry
  #   externalDocs:
  #     url: http://geojson.org/geojson-spec.html#id4
  #   allOf:
  #     - $ref: "#/definitions/Geometry"
  #     - properties:
  #         coordinates:
  #           type: array
  #           items:
  #             type: array
  #             items:
  #               $ref: '#/definitions/Point2D'
  # MultiPoint:
  #   type: object
  #   description: GeoJSon geometry
  #   externalDocs:
  #     url: http://geojson.org/geojson-spec.html#id5
  #   allOf:
  #     - $ref: "#/definitions/Geometry"
  #     - properties:
  #         coordinates:
  #           type: array
  #           items:
  #             $ref: '#/definitions/Point2D'
  # MultiLineString:
  #   type: object
  #   description: GeoJSon geometry
  #   externalDocs:
  #     url: http://geojson.org/geojson-spec.html#id6
  #   allOf:
  #     - $ref: "#/definitions/Geometry"
  #     - properties:
  #         coordinates:
  #           type: array
  #           items:
  #             type: array
  #             items:
  #               $ref: '#/definitions/Point2D'
  # MultiPolygon:
  #   type: object
  #   description: GeoJSon geometry
  #   externalDocs:
  #     url: http://geojson.org/geojson-spec.html#id6
  #   allOf:
  #     - $ref: "#/definitions/Geometry"
  #     - properties:
  #         coordinates:
  #           type: array
  #           items:
  #             type: array
  #             items:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/Point2D'
  # GeometryCollection:
  #   type: object
  #   description: GeoJSon geometry collection
  #   required:
  #    - type
  #    - geometries
  #   externalDocs:
  #     url: http://geojson.org/geojson-spec.html#geometrycollection
  #   properties:
  #     type:
  #       type: string
  #       enum:
  #       - GeometryCollection
  #       description: Geometry collection data
  #     geometries:
  #         type: array
  #         items:
  #           $ref: '#/definitions/Geometry'
  SpecieRecordProperties:
    type: object
    description: Group of properties about species
    required:
      - "_id"
      - species
      - acceptedNameUsage
      - source
      - speciesOriginal
      - locality
      - alt
      - institution
      - catalogNumber
      - basisOfRecord
      - collector
      - suggestedStateProvince
      - suggestedCounty
      - year
      - month
      - day
      - taxID
      - url
      - environmentalOutlier
      - updated
    properties:
      _id:
        type: string
      species:
        type: string
      acceptedNameUsage:
        type: string
      source:
        type: string
      speciesOriginal:
        type: string
      locality:
        type: string
      alt:
        type: integer
      institution:
        type: string
      catalogNumber:
        type: string
      basisOfRecord:
        type: string
      collector:
        type: string
      suggestedStateProvince:
        type: string
      suggestedCounty:
        type: string
      year:
        type: integer
      month:
        type: integer
      day:
        type: integer
      taxID:
        type: integer
      url:
        type: string
      environmentalOutlier:
        type: string
      updated:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
